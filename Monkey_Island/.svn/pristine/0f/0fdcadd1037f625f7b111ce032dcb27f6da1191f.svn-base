package fr.eseo.command;

import java.awt.Point;
import java.util.Observable;
import java.util.Observer;

import fr.eseo.communication.Client;
import fr.eseo.communication.ProtocoleMonkeyIsland;
import fr.eseo.communication.ServiceMonkeyIsland;
import fr.eseo.model.Island;
import fr.eseo.model.Pirate;
import fr.eseo.model.Rhum;

public class Action implements Observer{
	
	private String message;
	
	/**
	 * Serveur MonkeyIsland du client.
	 */
	private ServiceMonkeyIsland monkeyIsland;
	
	
	private Client client;
	
	public Action(ServiceMonkeyIsland monkeyIsland, Client client, String message){
		this.message = message;
		this.monkeyIsland = monkeyIsland;
		this.client = client;
	}
	
	public void inscription(){
		this.monkeyIsland.inscriptionCanal(client); 
		Island.getInstance().addPirate();
		Island.getInstance().getPirates().get(0).addObserver(this);
		this.client.envoieMessage(ProtocoleMonkeyIsland.formatteMessageIndicationCarte(Island.getInstance().getCase()));	
		this.client.envoieMessage(ProtocoleMonkeyIsland.MESSAGE_INSCRIPTION);
		this.client.envoieMessage(ProtocoleMonkeyIsland.formaterIdentificationPirate(Island.getInstance().getPirates()));
		this.client.envoieMessage(ProtocoleMonkeyIsland.formaterPositionRhum(Island.getInstance().getRhums()));
	}
	public void movePirate(){
		try{
			final Point p = ProtocoleMonkeyIsland.commandeDuDeplacement(message);
			Island.getInstance().getPirates().get(0).movementPirate(p.x, p.y);
		}catch (Exception e) {
			this.client.envoieMessage(ProtocoleMonkeyIsland.formaterRefusDeplacementPirate());
			System.err.println(e.getMessage());
		}
	}
	public void demandUp(){
		this.client.envoieMessage("/D -1 0");
	}
	public void demandDown(){
		this.client.envoieMessage("/D 0 1");
	}
	public void demandRight(){
		this.client.envoieMessage("/D 1 0");
	}
	public void demandLeft(){
		this.client.envoieMessage("/D -1 0");
	}

	@Override
	public void update(Observable o, Object arg1) {
		if(o instanceof Pirate){
			this.client.envoieMessage(
					ProtocoleMonkeyIsland.formaterAcceptationDeplacementPirate(Island.getInstance().getPirates().get(0)));
		}else if(o instanceof Rhum){
			this.client.envoieMessage(ProtocoleMonkeyIsland.formaterIdentificationRhum(Island.getInstance().getRhums()));
		}
	}

}
	
